软件移植：
在PC端的目录结构：
    3th_apps
        json-c     //克隆代码：git clone https://github.com/json-c/json-c.git，切换到自建分支test-lihf（方便修改测试记录），并上传到自己的github账户上面
        libubox  //克隆代码：git clone git://git.openwrt.org/project/libubox.git，然后同上操作
        ubus       //克隆代码：git clone git://git.openwrt.org/project/ubus.git，然后同上操作
        uhttpd   //克隆代码：git clone git://git.openwrt.org/project/uhttpd.git，然后同上操作
        web_server    //项目总目录
            doc            //项目相关文档
            json-c        //子模块，git submodule add ../json-c json-c
            libubox     //同上
            ubus         //同上
            uhttpd     //同上
            toolChain_json.cmake
            toolChain_libubox.cmake
            toolChain_ubus.cmake
            toolChain_uhttpd.cmake

几个cmake配置文件如下：
1、toolChain_json.cmake 
set(CMAKE_SYSTEM_NAME Linux)
 
set(CMAKE_C_COMPILER arm-linux-gnueabihf-gcc)
set(CMAKE_CXX_COMPILER arm-linux-gnueabihf-g++)
 
set(CMAKE_FIND_ROOT_PATH "/mnt/share/src/web_server/json-c")
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
----------------------------------------------------------------------------------

2、toolChain_libubox.cmake
set(CMAKE_SYSTEM_NAME Linux)

set(CMAKE_C_COMPILER arm-linux-gnueabihf-gcc)
set(CMAKE_CXX_COMPILER arm-linux-gnueabihf-g++)
 
set(INSTALL_PATH "/mnt/share/build")
include_directories(${INSTALL_PATH}/include)
include_directories(${INSTALL_PATH}/include/json-c)
 
set(CMAKE_FIND_ROOT_PATH "/mnt/share/src/web_server/libubox")
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
 
set(json "/mnt/share/build/lib/libjson-c.so")
----------------------------------------------------------------------------------

3、toolChain_ubus.cmake
set(CMAKE_SYSTEM_NAME Linux)

set(CMAKE_C_COMPILER   arm-linux-gnueabihf-gcc)
set(CMAKE_CXX_COMPILER arm-linux-gnueabihf-g++)
 
set(INSTALL_PATH "/mnt/share/build")
include_directories(${INSTALL_PATH}/include)
 
set(CMAKE_FIND_ROOT_PATH "/mnt/share/src/web_server/ubus" $(INSTALL_PATH))
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
 
set(blob_library     ${INSTALL_PATH}/lib/libblobmsg_json.so)
set(json             ${INSTALL_PATH}/lib/libjson-c.so)
set(ubox_include_dir ${INSTALL_PATH}/include/libubox)
set(ubox_library     ${INSTALL_PATH}/lib/libubox.so)
----------------------------------------------------------------------------------

4、toolChain_uhttpd.cmake
set(CMAKE_SYSTEM_NAME Linux)

set(CMAKE_C_COMPILER   arm-linux-gnueabihf-gcc)
set(CMAKE_CXX_COMPILER arm-linux-gnueabihf-g++)

link_directories(${INSTALL_PATH}/lib)
link_libraries(crypt)

set(INSTALL_PATH /mnt/share/build)

include_directories(${INSTALL_PATH}/include) 
include_directories(${INSTALL_PATH}/include/lua)

set(CMAKE_FIND_ROOT_PATH "/mnt/share/src/web_server/uhttpd" $(INSTALL_PATH))
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
 
set(libjson          ${INSTALL_PATH}/lib/libjson-c.so)
set(ubox_include_dir ${INSTALL_PATH}/include/libubox)

add_definitions(-w)